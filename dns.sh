#!/bin/bash
set -euo pipefail

# ==========================================
# Configuration Variables
# ==========================================
PRIMARY_DNS=("8.8.8.8" "8.8.4.4")        # Google DNS
SECONDARY_DNS=("1.1.1.1" "208.67.222.222") # Cloudflare & OpenDNS
LOCK_FILE=true                            # Set to false to disable immutable flag
VALIDATE_DNS=true                        # Set to false to skip DNS validation
TEST_DOMAIN="google.com"                 # Domain for DNS validation

# ==========================================
# Utility Functions
# ==========================================
function info() {
    echo -e "\033[1;32m[INFO] $1\033[0m"
}

function warning() {
    echo -e "\033[1;33m[WARN] $1\033[0m"
}

function error() {
    echo -e "\033[1;31m[ERROR] $1\033[0m" >&2
    exit 1
}

function is_command_available() {
    command -v "$1" &> /dev/null
}

# ==========================================
# DNS Configuration Functions
# ==========================================
function configure_resolvconf() {
    # Backup existing config
    local backup_file="/etc/resolv.conf.bak.$(date +%Y%m%d_%H%M%S)"
    if [ -f "/etc/resolv.conf" ]; then
        info "Creating backup at $backup_file"
        cp -p /etc/resolv.conf "$backup_file"
    fi

    # Handle symlink
    if [ -L "/etc/resolv.conf" ]; then
        info "Removing symlink /etc/resolv.conf"
        rm -f /etc/resolv.conf
    fi

    # Create new resolv.conf
    info "Creating new DNS configuration"
    {
        echo "# Generated by $(basename "$0") on $(date)"
        echo "# DO NOT EDIT MANUALLY"
        
        for dns in "${PRIMARY_DNS[@]}" "${SECONDARY_DNS[@]}"; do
            echo "nameserver $dns"
        done
        
        echo "options rotate timeout:1 attempts:2"
    } > /etc/resolv.conf

    # Set permissions
    chmod 644 /etc/resolv.conf
}

function lock_resolvconf() {
    if [ "$LOCK_FILE" = true ]; then
        if chattr +i /etc/resolv.conf 2>/dev/null; then
            info "File successfully locked (immutable)"
        else
            warning "Could not lock file (chattr not supported or failed)"
        fi
    fi
}

function validate_dns() {
    if [ "$VALIDATE_DNS" = false ]; then
        return 0
    fi

    info "Testing DNS resolution with $TEST_DOMAIN"
    
    if is_command_available "dig"; then
        if ! dig +short "$TEST_DOMAIN" | grep -P '^\d+\.\d+\.\d+\.\d+$'; then
            error "DNS resolution test failed"
        fi
    elif is_command_available "nslookup"; then
        if ! nslookup "$TEST_DOMAIN" | grep -q "Address:"; then
            error "DNS resolution test failed"
        fi
    else
        warning "Neither dig nor nslookup available - skipping DNS test"
    fi
}

function handle_systemd_resolved() {
    if systemctl is-active --quiet systemd-resolved; then
        warning "systemd-resolved is active. For persistent DNS configuration:"
        warning "You might want to use:"
        warning "  sudo resolvectl dns <interface> ${PRIMARY_DNS[0]} ${PRIMARY_DNS[1]}"
        warning "  sudo resolvectl domain <interface> ~."
        warning "  sudo resolvectl default-route <interface> true"
        
        read -rp "Continue with direct /etc/resolv.conf modification? (y/n) " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 0
        fi
    fi
}

# ==========================================
# Main Execution
# ==========================================
function main() {
    # Check root privileges
    if [ "$EUID" -ne 0 ]; then
        error "Please run as root"
    fi

    handle_systemd_resolved
    configure_resolvconf
    lock_resolvconf
    
    info "\nCurrent DNS configuration:"
    cat /etc/resolv.conf
    
    validate_dns
    
    info "Operation completed successfully"
}

main
